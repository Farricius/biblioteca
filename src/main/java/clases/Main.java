/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {

		ArrayList<Libro> catalogo = new ArrayList<Libro>(); //Crea el catálogo como lista

		while (true) {
			int opcion = menu();
			switch (opcion) {
			case 1:
				// TODO Alta de Libro
				// titulo:isbn:genero:autor:paginas
				alta(catalogo);
				break;
			case 2:
				// TODO Lista de Libros
				listadoLibros(catalogo);
				
				break;
			
			case 3:
				bajaLibros(catalogo);
				break;
				
			case 4:
				busquedaLibros(catalogo);
				break;
				
			default:
				break;
			}
		}
	}

	private static int menu() {
		int opcion = 0;

		do {
			System.out.println("Opciones:");
			System.out.println("1. Alta de Libro");
			System.out.println("2. Lista de Libros");
			System.out.println("3. Baja de Libros");
			System.out.println("4. Búsqueda de Libros");
			System.out.println("5. Ordenacion de Libros");
			System.out.print("Introduce la opcion: ");

			opcion = leerOpcion(5); //param. int max

		} while (opcion <= 0);

		return opcion;
	}

	private static int leerOpcion(int max) {
		int opcion = -1;
		try {
			Scanner teclado = new Scanner(System.in);
			opcion = teclado.nextInt();
			if (opcion > max)
				opcion = -1;
		} catch (InputMismatchException e) {
			System.out.println("Opción incorrecta");
		}

		return opcion;
	}

	private static void alta(ArrayList<Libro> catalogo) {
		// Leer de la entrada
		String datosLibro = obtenerDatosLibro();
		// titulo:isbn:genero:autor:paginas
		// Procesar la entrada
		Libro libro = procesaEntrada(datosLibro);
		// Crear el libro con los datos de la entrada
		catalogo.add(libro);
		// Meter el libro en el catalogo
		
	}

	private static String obtenerDatosLibro() {
		String datos = null;

		boolean validado = false;
		while (!validado) {
			System.out.println("Introduce los datos de un libro.");
			System.out.println("Usa el formato \"titulo:isbn:genero:autor:paginas\"");
			try {
				datos = leerCadena();
				if (true)// Supongo de momento que valida siempre
					validado = true;
			} catch (InputMismatchException e) {
				System.out.println("Datos de entrada no válidos");
			}
		}

		return datos;
	}

	private static Libro procesaEntrada(String entrada) {
		Libro libro = null;

		String[] datos = entrada.split(":");

		String titulo = datos[0];
		String isbn = datos[1];
		Genero genero = Genero.getGenero(datos[2]);
		String autor = datos[3];
		Integer paginas = Integer.parseInt(datos[4]);

		libro = new Libro(titulo, isbn, genero, autor, paginas);

		return libro;
	}

	private static String leerCadena() {
		String opcion = null;
		Scanner teclado = new Scanner(System.in);
		opcion = teclado.nextLine();
		return opcion;
	}
	
	private static void listadoLibros (ArrayList<Libro> catalogo) {
		System.out.println("---");
		//String letras = catalogo.toString();
		for (int i = 0; i < catalogo.size(); i++) {
			  System.out.println("*****");
			  System.out.println("Libro en posición nº: " + (i)); //i starts 0 
			  System.out.println("Título: " + catalogo.get(i).getTitulo());
			  System.out.println("ISBN: " + catalogo.get(i).getIsbn());
			  System.out.println("Género: " + catalogo.get(i).getGenero());
			  System.out.println("Autor: " + catalogo.get(i).getAutor());
			  System.out.println("Nº Pág: " + catalogo.get(i).getPaginas());
			  System.out.println("*****");
		    }
	}		
//		ALTERNATIVE FOR-EACH --- Más breve
//		for (Libro l : catalogo) {
//			System.out.println(l);
//		}

		private static void bajaLibros (ArrayList <Libro> catalogo) {
			
		        Scanner teclado = new Scanner(System.in);
		        System.out.println("¿Cual libro quieres borrar?");
		        int opcion = teclado.nextInt();
		        System.out.println("Libro borrado: " + catalogo.get(opcion).getTitulo());
		        catalogo.remove(opcion);      
		    }
				//pepito:288:novela:fran:300
			
				//clients.remove(clients.size() - 1);
				
				private static void busquedaLibros(ArrayList<Libro> catalogo) {
					
					Scanner teclado = new Scanner(System.in);
					System.out.print("Búsqueda automática--, introduzca el ISBN: ");
					String isbn_deseado = teclado.next();
					
					for (Libro lib : catalogo) { //RECORRIDO FOR - EACH CON CONDICIONANTE
						if (lib.getIsbn().equalsIgnoreCase(isbn_deseado)) {
							System.out.println("*** ¡El libro sí está disponible! Título: " + lib.getTitulo());
						}
							else {
								System.out.println("Libro no disponible...");
							}
						}
					}

			} // RIP BODY
			
		
//		System.out.println("Introduzca posición del libro a eliminar: " );
//		int opcion;
//		int ultimoElemento = catalogo.size() - 1;
//		
//		try {
//			Scanner teclado = new Scanner(System.in);
//			opcion = teclado.nextInt();
//			catalogo.remove(opcion);
//			
//			if (opcion == catalogo.size()) {
//				System.out.println("¡Borraste tu libro más nuevo!");
//				//catalogo.remove(ultimoElemento);
//				catalogo.remove(catalogo.size()-1);
//			}
//			
//			System.out.println("Libro borrado: " + catalogo.get(opcion).getTitulo());
//			
////			if (opcion > catalogo.size())
////				opcion = -1; //Vuelta al switch x
//		} catch (InputMismatchException e) {
//			System.out.println("Opción no válida/numérica, volviendo al menú.");
//		}
//	}
			